<?php

$calculator = new Calculator([]);
$sum = 0;
while (true) {
    echo "=====" . PHP_EOL;
    echo "SHAPE AREA CALCULATOR" . PHP_EOL;
    echo "Choose shape: " . PHP_EOL;
    echo "[1] Square" . PHP_EOL;
    echo "[2] Triangle" . PHP_EOL;
    echo "[3] Circle" . PHP_EOL;
    echo "[4] Sum all areas" . PHP_EOL;
    echo "[Any] Exit" . PHP_EOL;
    $option = (int)readline('Select: ');
    echo "=====" . PHP_EOL;


    switch ($option) {
        case 1:
            $length = (int)readline('Enter length: ');
            $square = new Square('Square', $length);
            echo "The area of this square is {$square->getArea()}" . PHP_EOL;
            $calculator->add($square);
            break;
        case 2:
            $base = (int)readline('Enter base: ');
            $height = (int)readline('Enter height: ');
            $triangle = new Triangle('Triangle', $base, $height);
            echo "The area of this triangle is {$triangle->getArea()}" . PHP_EOL;
            $calculator->add($triangle);
            break;
        case 3:
            $radius = (int)readline('Enter radius: ');
            $circle = new Circle('Circle', $radius);
            echo "The area of this circle is {$circle->getArea()}" . PHP_EOL;
            $calculator->add($circle);
            break;
        case 4:

            foreach ($calculator as $item) {
                foreach ($item as $shape) {
                    $sum += $shape->getArea();
                }
            }
            echo "The sum of all shape areas is $sum" . PHP_EOL;
            break;

        default:
            exit;

    }

    //var_dump($calculator);
}


class Shape
{
    public string $name;

    public function __construct(string $name)
    {
        $this->name = $name;
    }

    public function getArea()
    {
    }


}

class Square extends Shape
{

    public function __construct(string $name, int $length)
    {
        parent::__construct($name);
        $this->length = $length;
    }

    public function getArea()
    {
        parent::getArea(); // TODO: Change the autogenerated stub
        return pow($this->length, 2);
    }

}

class Triangle extends Shape
{

    public function __construct(string $name, int $base, int $height)
    {
        parent::__construct($name);
        $this->base = $base;
        $this->height = $height;
    }

    public function getArea()
    {
        parent::getArea(); // TODO: Change the autogenerated stub
        return 0.5 * $this->base * $this->height;
    }

}

class Circle extends Shape
{

    public function __construct(string $name, int $radius)
    {
        parent::__construct($name);
        $this->radius = $radius;
    }

    public function getArea()
    {
        parent::getArea(); // TODO: Change the autogenerated stub
        return round((pi() * pow($this->radius, 2)), 2);
    }

}

class Calculator
{

    public array $allShapes;

    public function __construct(array $allShapes)
    {
        $this->allShapes = $allShapes;
    }

    public function add($area)
    {
        return $this->allShapes[] = $area;

    }


}

